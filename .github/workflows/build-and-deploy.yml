name: Build and Deploy Flutter Android App

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.35.1'
          channel: 'stable'

      - name: Get dependencies
        run: flutter pub get

      - name: Run tests
        run: flutter test

      - name: Analyze code
        run: flutter analyze

      - name: Check formatting
        run: dart format --output=none --set-exit-if-changed .

  build-debug:
    name: Build Debug APK
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.35.1'
          channel: 'stable'

      - name: Get dependencies
        run: flutter pub get

      - name: Build debug APK
        run: flutter build apk --debug

      - name: Upload debug APK
        uses: actions/upload-artifact@v4
        with:
          name: debug-apk
          path: build/app/outputs/flutter-apk/app-debug.apk
          retention-days: 90

  build-release:
    name: Build Release APK
    runs-on: ubuntu-latest
    needs: test
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.35.1'
          channel: 'stable'

      - name: Get dependencies
        run: flutter pub get

      - name: Extract version from tag
        id: version
        run: |
          VERSION=${GITHUB_REF#refs/tags/}
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Version: $VERSION"

      - name: Build release APK (Universal)
        run: flutter build apk --release

      - name: Build release APK (Split)
        run: flutter build apk --release --split-per-abi

      - name: List APK files
        run: |
          echo "APK files created:"
          find build/app/outputs/flutter-apk/ -name "*.apk" -exec ls -lh {} \;

      - name: Upload release APK (Universal)
        uses: actions/upload-artifact@v4
        with:
          name: release-apk-universal-${{ steps.version.outputs.version }}
          path: build/app/outputs/flutter-apk/app-release.apk
          retention-days: 365

      - name: Upload release APK (Split)
        uses: actions/upload-artifact@v4
        with:
          name: release-apk-split-${{ steps.version.outputs.version }}
          path: build/app/outputs/flutter-apk/
          retention-days: 365

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ steps.version.outputs.version }}
          body: |
            ## üì± PEX - √Årea do Cliente
            
            ### üì¶ Download APK
            Download the APK file below to install on your Android device.
            
            ### üîß Installation
            1. Download the APK file
            2. Enable "Install from unknown sources" in your Android settings
            3. Install the APK
            
            ### üìã Changes
            - Automated release build
            - Flutter Android app for client area management
            
            ### üèóÔ∏è Build Info
            - **Version**: ${{ steps.version.outputs.version }}
            - **Build Date**: ${{ github.event.head_commit.timestamp }}
            - **Commit**: ${{ github.sha }}
          files: |
            build/app/outputs/flutter-apk/app-release.apk
            build/app/outputs/flutter-apk/app-arm64-v8a-release.apk
            build/app/outputs/flutter-apk/app-armeabi-v7a-release.apk
            build/app/outputs/flutter-apk/app-x86_64-release.apk
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Optional: Firebase App Distribution (uncomment if you set up Firebase)
  # deploy-firebase:
  #   name: Deploy to Firebase App Distribution
  #   runs-on: ubuntu-latest
  #   needs: build-release
  #   if: startsWith(github.ref, 'refs/tags/v')
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v4
  #
  #     - name: Download APK artifact
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: release-apk-${{ github.ref_name }}
  #         path: ./
  #
  #     - name: Deploy to Firebase App Distribution
  #       uses: wzieba/Firebase-Distribution-Github-Action@v1
  #       with:
  #         appId: ${{ secrets.FIREBASE_APP_ID }}
  #         token: ${{ secrets.FIREBASE_TOKEN }}
  #         groups: testers
  #         file: app-release.apk
  #         releaseNotes: |
  #           Release ${{ github.ref_name }}
  #           - Automated build from GitHub Actions
  #           - Flutter Android app for client area management
